"use strict";function randomNumber(e,t){return Math.floor(Math.random()*(t-e))+e}function randomFrom(e){return e[Math.floor(Math.random()*e.length)]}function shuffle(e){for(var t,a,r=e.length;r;t=Math.floor(Math.random()*r),a=e[--r],e[r]=e[t],e[t]=a);return e}function addCommas(e){return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}function findInArray(e,t){let a=e.indexOf(t);return a>-1?a:null}function removeFromArray(e,t){for(var a=e.length-1;a--;)e[a]==t&&e.splice(a,1)}function percentOf(e,t){return 0==e||0==t?0:Math.round(100*t/e)}function sendEvent(e,t,a,r){r?ga("send","event",{eventCategory:e,eventAction:t,eventLabel:a,eventValue:r}):a?ga("send","event",{eventCategory:e,eventAction:t,eventLabel:a}):ga("send","event",{eventCategory:e,eventAction:t})}function countVowels(e){let t=0,a=e.match(/[AEIOU]/gi);return a&&(t=a.length),t}const siteURL="",playerID=randomNumber(1,100),employeeNumberSeed=randomNumber(1e4,99999),rules=[{name:"Demand A Letter",cost:5},{name:"Ban A Letter",cost:3},{name:"Set A Maximum",cost:2},{name:"Set A Minimum",cost:2},{name:"Limit Vowels",cost:1},{name:"Ban A Combo",cost:1}],challenges=[{name:"Playable Mortal Kombat Characters",nameAsRule:"Your password must be a playable Mortal Kombat character",failedMessage:"[PASS] is not a playable Mortal Kombat character",possible:["johnny cage","kano","liu kang","raiden","scorpion","sonya blade","sub-zero","goro","shang tsung","reptile","baraka","jade","jax","kintaro","kitana","kung lao","mileena","noob saibot","shao khan","smoke","chameleon","cyrax","ermac","kabal","khameleon","motaro","nightwolf","rain","sektor","sheeva","sindel","stryker","meat","bo rai cho","frost"]},{name:"First Name of Bob's Burgers characters",nameAsRule:"Your password MUST be the first name of a Bob's Burgers character",failedMessage:"[PASS] is not a Bob's Burgers character",possible:["Mike","Bob","LINDA","GENE","LOUISE","TINA","TEDDY","MORT","RUDY","JIMMY","ANDY","OLLIE","JOCELYN","TAMMY","HELEN","TREV","MARSHMALLOW","BOO BOO","DARRYL","PHILLIP","ALEX","ART","RANDY","KURT","LOGAN","SASHA"]}];let currentPlayerNum=0;var app=new Vue({el:"#app",data:{currentlyInGame:!1,roomCode:null,rules:rules,my:{employeeNumber:randomNumber(1e4,99999),name:"",rulebux:6,passwordAttempts:0,score:0},currentPlayer:{},players:[],round:{phase:"choose rules",number:0,challenge:challenges[1],rules:[],bugs:[],possibleAnswerCount:challenges[1].possible.length,averageSize:0,averageVowels:0,maxOffset:2,minOffset:2,vowelOffset:1,elapsedTime:0,timer:void 0,crash:{active:!1,word:"",player:[]}},ui:{enterCode:{focus:!1},addBug:"",addBugErrors:[],passwordAttempt:"",passwordAttemptErrors:[],passwordInputError:!1,currentRule:{editing:!1,name:"",cost:0,inputValue:"",inputValueTwo:""}},messages:[]},methods:{createRoom(){const e=this;e.roomCode=function(e){let t="";const a="ABCDEFGHIJKLMNOPQRSTUVWXYZ";for(let r=0;r<e;r++)t+=a.charAt(Math.floor(Math.random()*a.length));return t}(4),pubnub.subscribe({channels:[e.roomCode],withPresence:!0}),e.currentlyInGame=!0,e.round.phase="pregame";const t=new URL(window.location);t.searchParams.set("room",e.roomCode),window.history.pushState({},"",t)},joinRoom(){const e=this;pubnub.subscribe({channels:[e.roomCode],withPresence:!0}),e.currentlyInGame=!0;const t=new URL(window.location);t.searchParams.set("room",e.roomCode),window.history.pushState({},"",t),alert("107")},updatePlayer(){const e=this;{const t={name:e.my.name,employeeNumber:e.my.employeeNumber,score:0};e.players.push(t)}pubnub.publish({channel:e.roomCode,message:{type:"updatePlayers",data:{players:e.players}}})},chooseRule(e){const t=this;t.ui.currentRule.name=e.name,t.ui.currentRule.cost=e.cost,t.ui.currentRule.editing=!0},saveRule(e){const t=this;let a={type:"",message:"",inputValue:"",inputValueTwo:null};"Ban A Letter"==e.name&&(a.type=e.name,a.inputValue=t.ui.currentRule.inputValue.toUpperCase(),a.message="You may not use the letter "+a.inputValue),"Demand A Letter"==e.name&&(a.type=e.name,a.inputValue=t.ui.currentRule.inputValue.toUpperCase(),a.message="You must use the letter "+a.inputValue),"Set A Maximum"==e.name&&(a.type=e.name,a.inputValue=t.round.averageSize+t.round.maxOffset,a.message=t.ui.currentRule.inputValue),"Set A Minimum"==e.name&&(a.type=e.name,a.inputValue=t.round.averageSize-t.round.minOffset,a.message=t.ui.currentRule.inputValue),"Limit Vowels"==e.name&&(a.type=e.name,a.inputValue=t.round.averageVowels+t.round.vowelOffset,a.message=t.ui.currentRule.inputValue),"Ban A Combo"==e.name&&(a.type=e.name,a.inputValue=t.ui.currentRule.inputValue.toUpperCase(),a.inputValueTwo=t.ui.currentRule.inputValueTwo.toUpperCase(),a.inputValue==a.inputValueTwo?a.message="You may only use the letter "+a.inputValue+" once":a.message="You may not use the letters "+a.inputValue+" and "+a.inputValueTwo+" together"),t.my.rulebux=t.my.rulebux-e.cost,t.round.rules.push(a),t.clearCurrentRule(),t.findPossibleRightAnswers()},clearCurrentRule(){const e=this;e.ui.currentRule.name="",e.ui.currentRule.inputValue="",e.ui.currentRule.inputValueTwo="",e.ui.currentRule.cost=0,e.ui.currentRule.editing=!1},addBug(){const e=this;e.ui.addBugErrors=[];const t=e.ui.addBug.toUpperCase();let a=!1;e.round.challenge.possible.forEach((function(e,r){t==e.toUpperCase()&&(a=!0)})),a||e.ui.addBugErrors.push("Just so you know, "+t+" wasn't a valid password"),findInArray(e.round.bugs,t)&&e.ui.addBugErrors.push("You already added "+t+"."),e.round.bugs&&e.round.bugs.length>0&&(e.my.rulebux-=1),e.ui.addBug="",e.round.bugs.push(t)},onboardEmployees(){this.round.phase="create password",this.startTimer()},startTimer(){this.timer=setInterval(()=>{this.round.elapsedTime+=1,this.players[0].score+=5},1e3)},stopTimer(){clearInterval(this.timer)},resetTimer(){this.elapsedTime=0},tryToFailThis(e){e=e.toUpperCase();let t=!1,a=[];return this.round.rules.forEach((function(r){"Ban A Letter"==r.type&&e.includes(r.inputValue)&&(t=!0,a.push("Password cannot contain "+r.inputValue)),"Demand A Letter"==r.type&&(e.includes(r.inputValue)||(t=!0,a.push("Password must contain "+r.inputValue))),"Set A Maximum"==r.type&&e.length>r.inputValue&&(t=!0,a.push("Password is too long")),"Set A Minimum"==r.type&&possibility.length<r.inputValue&&(t=!0,a.push("Password is too short")),"Limit Vowels"==r.type&&countVowels(e)>r.inputValue&&(t=!0,a.push("Password has too many vowels")),"Ban A Combo"==r.type&&(r.inputValue==r.inputValueTwo?e.replace(/[^a]/g,"").length>1&&(t=!0,a.push("Password can only contain one "+r.inputValue)):r.inputValue!=r.inputValueTwo&&e.includes(r.inputValue)&&e.includes(r.inputValueTwo)&&(t=!0,a.push("Password cannot contain both the letters "+r.inputValue+" and "+r.inputValueTwo)))})),!!t&&{failed:!0,reasons:a}},tryToCrashWith(e){let t=!1;return this.round.bugs.forEach((function(a){a==e&&(t=!0)})),t},tryToFind(e){e=e.toUpperCase();let t=!1;return this.round.challenge.possible.forEach((function(a){e.toUpperCase()==a.toUpperCase()&&(t=!0)})),t},tryThisPassword(e){const t=this;e=e.toUpperCase(),t.ui.passwordAttemptErrors=[];const a=t.tryToCrashWith(e),r=t.tryToFailThis(e),s=t.tryToFind(e);let n=!1;if(a&&(t.round.phase="crashed",t.round.crash.active=!0,t.round.crash.player=t.players[1],t.round.crash.word=e,t.players[0].score+=100,t.stopTimer(),t.resetTimer()),r&&(t.ui.passwordAttemptErrors=r.reasons,t.ui.passwordInputError=!0),s&&(n=!0),!s){let a=t.round.challenge.failedMessage.replace("[PASS]",e);n=!1,t.ui.passwordAttemptErrors.push(a)}t.my.passwordAttempts++,t.ui.passwordAttempt="",a||r||n&&(t.players[1].score+=100,t.players[1].score+=20,t.my.score+=100,t.my.score+=20,t.stopTimer(),t.resetTimer(),alert("YOU WON! \n At this point, I need to turn "+t.players[1].name+" into "+t.players[2].name),t.passwordSuccess(e))},findPossibleRightAnswers(){const e=this;let t=0;e.round.challenge.possible.forEach((function(a){0==e.tryToFailThis(a)&&t++})),e.round.possibleAnswerCount=t},findAverageSize(){const e=this.round.challenge.possible;for(var t=0,a=0;a<e.length;a++)t+=e[a].length;var r=t/e.length;this.round.averageSize=Math.round(r)},findAverageVowelCount(){const e=this.round.challenge.possible;for(var t=0,a=0;a<e.length;a++){let r=e[a].match(/[aeiou]/gi);r&&(t+=r.length)}var r=t/e.length;this.round.averageVowels=Math.round(r)},passwordSuccess(e){},crashTheServer(){}},computed:{},mounted:function(){const e=this;e.findAverageSize(),e.findAverageVowelCount();var t=new URLSearchParams(window.location.search);t.has("room")&&(e.roomCode=t.get("room"))},directives:{}});Vue.directive("touppercase",{update(e){e.value=e.value.toUpperCase()}}),Vue.directive("focus",{inserted:function(e){e.focus()}}),Vue.directive("dropdown",{inserted:function(e){e.select()}});const theChannel="the_guide",pubnub=new PubNub({publishKey:"pub-c-c25666ba-28d6-41ef-8c12-670fc0f40021",subscribeKey:"sub-c-ba437e90-31bb-11eb-9713-12bae088af96",uuid:playerID});pubnub.addListener({message:function(e){displayMessage("[MESSAGE: received]",e.message,e.timetoken,e),"updatePlayers"==e.message.type&&(app.players=e.message.data.players)},status:function(e){displayMessage(e.category,"connected to channels: "+e.affectedChannels,e.currentTimetoken,e)},presence:function(e){e.channel!=theChannel&&(app.playerCount=e.occupancy)}}),pubnub.subscribe({channels:["the_guide"],withPresence:!0});const displayMessage=function(e,t,a,r){r?app.messages.push({type:e,msg:t,timeStamp:a,obj:r}):a?app.messages.push({type:e,msg:t,timeStamp:a}):t?app.messages.push({type:e,msg:t}):e&&app.messages.push({type:e})};
//# sourceMappingURL=site.min.js.map